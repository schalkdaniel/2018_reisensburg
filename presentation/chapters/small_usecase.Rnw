\begin{frame}[fragile]{Initializing Model}

<<eval=FALSE>>=
library(compboost)

data(PimaIndiansDiabetes, package = "mlbench")

cboost = Compboost$new(PimaIndiansDiabetes, "diabetes", 
  loss = BinomialLoss$new())

cboost$addBaselearner("age", "spline", PSplineBlearner, 
  degree = 3, knots = 10, penalty = 2, differences = 2)
cboost$addBaselearner("mass", "linear", PolynomialBlearner, 
  degree = 1, intercept = TRUE)
@

<<include=FALSE>>=
library(mboost)

dir.linux   = "/home/daniel/github_repos/compboost"
dir.windows = "../../../compboost"

if (dir.exists(dir.windows)) {
  devtools::load_all(dir.windows)
}
if (dir.exists(dir.linux)) {
  devtools::load_all(dir.linux)
}

data(PimaIndiansDiabetes, package = "mlbench")

cboost = Compboost$new(PimaIndiansDiabetes, "diabetes", 
  loss = BinomialLoss$new())

cboost$addBaselearner("age", "spline", PSplineBlearner, 
	degree = 3, knots = 10, penalty = 2, differences = 2)
cboost$addBaselearner("mass", "linear", PolynomialBlearner, 
	degree = 1, intercept = TRUE)
@


\end{frame}

\begin{frame}[fragile]{Initializing Model}

<<>>=
cboost$train(2000, trace = FALSE) 
cboost
@


\end{frame}

\begin{frame}[fragile]{Access Results}

<<out.width="0cm",out.height="0cm">>=
table(cboost$selected())
head(cboost$risk())
cboost$plot("age_spline", iters = c(100, 500, 1000, 2000))
@

\end{frame}


\begin{frame}[fragile]{Plot Results}

\begin{center}
<<out.width="11cm",out.height="6cm",echo=FALSE,fig.asp=0.5455,warning=FALSE,message=FALSE>>=
library(ggplot2)
library(ggthemes)

cboost$plot("age_spline", iters = c(100, 500, 1000, 2000)) +
	theme_tufte() + 
	scale_color_brewer(palette = "Spectral")
@
\end{center}

\end{frame}

\begin{frame}[fragile]{Custom Poisson Loss: Definition}

<<>>=
lossPoisson = function (truth, response) {
  return (-log(exp(response)^truth * exp(-exp(response)) / gamma(truth + 1)))
}
gradPoisson = function (truth, response) {
  return (exp(response) - truth)
}
constInitPoisson = function (truth) {
  return (log(mean.default(truth)))
}
# Define custom loss:
my.poisson.loss = CustomLoss$new(lossPoisson, gradPoisson, constInitPoisson)
@

\end{frame}


\begin{frame}[fragile]{Custom Poisson Loss: Train Model}

<<>>=
data(VonBort, package = "vcd")

cboost = Compboost$new(VonBort, "deaths", loss = my.poisson.loss)
cboost$addBaselearner("year", "spline", PSplineBlearner, 
  degree = 3, knots = 10, penalty = 2, differences = 2)
cboost$train(100, trace = FALSE)

mod = mboost(deaths ~ bbs(year, differences = 2, lambda = 2, 
  degree = 3, knots = 10), data = VonBort, family = Poisson(), 
  control = boost_control(mstop = 100, nu = 0.05))

head(cbind(
  compboost = as.numeric(cboost$coef()[[1]]), 
  mboost = as.numeric(coef(mod)[[1]])))
@

\end{frame}