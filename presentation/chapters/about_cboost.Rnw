\begin{frame}{About compboost}

The \texttt{compboost} package is a fast and flexible framework for model-based boosting completely written in \texttt{C++}:

\begin{itemize}

	\item
	  With \texttt{mboost} as standard, we want to keep the modular principle of defining custom base-learner and losses.

	\item 
	  Completely written in \texttt{C++} and exposed by \texttt{Rcpp} \parbox{0.5cm}{\parbox{3cm}{\cite{Rcpp}}} \cite{eddelbuettel2017exposing} to obtain high performance and full memory control.

	\item
		\texttt{R} API is written in \texttt{R6} to provide convenient wrapper.

	\item 
	  Major parts of the \texttt{compboost} functionality are unit tested against \texttt{mboost} to ensure correctness.

\end{itemize}

\end{frame}


\begin{frame}{Functionality of compboost}

Main components:

\begin{itemize}

	\item
		Base-learner and loss classes.
	
	\item
		Logger class for early stopping and logging mechanisms.

\end{itemize}

Possible extensions:

\begin{itemize}

	\item
		Custom \texttt{R} or \texttt{C++} base-learner.
	
	\item
		Custom \texttt{R} or \texttt{C++} loss objects.
	
	\item
		Custom logging and stopping rules via custom losses.

\end{itemize}

Custom classes can be defined without recompiling the whole package, even when using \texttt{C++} functions.

\end{frame}