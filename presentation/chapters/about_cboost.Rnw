\begin{frame}{About Compboost}

\begin{itemize}

	\item
	  With \texttt{mboost} as standard, we want to keep the modular principle of defining custom base-learner and losses.

	\item 
	  Core is written in \texttt{C++} and exposed by \texttt{Rcpp} to obtain high performance and full memory control.

	\item
		\texttt{R} API is written with \texttt{R6} to provide convenient wrapper.

	\item 
	  Major parts of \texttt{compboost} functions are unit tested against \texttt{mboost} to ensure correct use.

\end{itemize}

\end{frame}


\begin{frame}{Compboost: Functionality}

Main classes:

\begin{itemize}

	\item
		Base-learner and loss classes.
	
	\item
		Logger class for early stopping and logging mechanisms.

\end{itemize}

Custom functionality:

\begin{itemize}

	\item
		\texttt{R} or \texttt{C++} base-learner.
	
	\item
		\texttt{R} or \texttt{C++} loss objects.
	
	\item
		Custom logging and stopping rules via custom losses.

\end{itemize}

Custom classes can be defined without recompiling the whole package, even when using \texttt{C++} functions.

\end{frame}